from all.common import *


#–≤—ã–±–æ—Ä –º–µ–∂–¥—É —á–∞–µ–≤—ã–º–∏ –∏ –æ—Ç–∑—ã–≤–æ–º
@bot.message_handler(regexp="–û—Ç–ø—Ä–∞–≤–∏—Ç—å*")
def post_message(message):
    keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    key_1 = types.KeyboardButton('–û—Ç–∑—ã–≤')
    key_2 = types.KeyboardButton('–ß–∞–µ–≤—ã–µ')
    keyboard.add(key_1, key_2)
    bot.reply_to(message, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ù–∏–∫–∏—Ç–µ?', reply_markup=keyboard)
    bot.register_next_step_handler(message, post_message_func)


# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def post_message_func(message):
    if message.text == '–ß–∞–µ–≤—ã–µ':
        text = 'üí∏'
        bot.send_message(chat_id_Nikita, text)
        bot.reply_to(message, '*–ß–∞–µ–≤—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ù–∏–∫–∏—Ç–µ*', parse_mode='Markdown')
        start(message)
    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤ –ù–∏–∫–∏—Ç–µ')
        bot.register_next_step_handler(message, send_feedback)


# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ—Ç–∑—ã–≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π
@bot.callback_query_handler(func=lambda call: True)
def send_feedback(message):
    global feedback
    feedback = message.text
    correcting_answer(message, '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –æ—Ç–∑—ã–≤', send_feedback_func)


@bot.callback_query_handler(func=lambda call: True)
def send_feedback_func(message):
    if message.text == "–î–∞":
        bot.send_message(chat_id_Nikita, feedback)
        bot.reply_to(message, '*–û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ù–∏–∫–∏—Ç–µ*', parse_mode='Markdown')
    else:
        bot.reply_to(message, '*–û—Ç–∑—ã–≤ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ù–∏–∫–∏—Ç–µ*', parse_mode='Markdown')
    start(message)
